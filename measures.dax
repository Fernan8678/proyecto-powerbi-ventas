-- ImporteDolares_Egresos
ImporteDolares_Egresos = 
CALCULATE(
          SUM(Fact_ventas[ImporteDolares]),
          Fact_ventas[Clasificación Comprobante] = "Egresos por Ventas"
         )

-- ImporteDolares_Ingresos
ImporteDolares_Ingresos = 
CALCULATE(
          SUM(Fact_ventas[ImporteDolares]),
          Fact_ventas[Clasificación Comprobante] = "Ingresos por Ventas"
          )

-- ImportePesos_Egresos
ImportePesos_Egresos = 
CALCULATE(
          SUM(Fact_ventas[ImportePesos]),
          Fact_ventas[Clasificación Comprobante] = "Egresos por Ventas"
          )

-- ImportePesos_Ingresos
ImportePesos_Ingresos = 
CALCULATE(
          SUM(Fact_ventas[ImportePesos]),
          Fact_ventas[Clasificación Comprobante] = "Ingresos por Ventas"
          )

-- Promedio Ventas
Promedio Ventas = 
VAR Promedio_ = 
    AVERAGEX(
             VALUES(Dim_fechas[Mes_nombre]),
             CALCULATE([Total Venta Neta])
             )
RETURN
COALESCE(Promedio_,0)

-- Total Venta AC
Total Venta AC = TOTALYTD([Total Venta Neta],Dim_fechas[Fecha_Key])

-- Total Venta AC LY
Total Venta AC LY = CALCULATE([Total Venta AC],SAMEPERIODLASTYEAR(Dim_fechas[Fecha_Key]))

-- Total Venta Bruta
Total Venta Bruta = 
VAR _Moneda = 
    SELECTEDVALUE(Dim_moneda[Moneda],"Peso") 
RETURN
SWITCH( _Moneda,
        "Peso",[ImportePesos_Ingresos],
        "Dolar",[ImporteDolares_Ingresos],
        BLANK()
        )

-- Total Venta LY
Total Venta LY = CALCULATE([Total Venta Neta],SAMEPERIODLASTYEAR(Dim_fechas[Fecha_Key]))

-- Total Venta Neta
Total Venta Neta = 
VAR _Monedas = 
    SELECTEDVALUE(Dim_moneda[Moneda],"Peso") 
RETURN
SWITCH( _Monedas,
        "Peso", IF (
                    ISBLANK([Total Venta Bruta]),
                    0,
                    [Total Venta Bruta] - ABS([ImportePesos_Egresos])
                    ),
        "Dolar",IF (
                    ISBLANK([Total Venta Bruta]),
                    0,
                    [Total Venta Bruta] - ABS([ImporteDolares_Egresos])
                    ),
        BLANK()
        )

-- Total Ventas MTD
Total Ventas MTD = TOTALMTD([Total Venta Neta],Dim_fechas[Fecha_Key])

-- Total Ventas QTD
Total Ventas QTD = TOTALQTD([Total Venta Neta],Dim_fechas[Fecha_Key])

-- Variación %
Variación % = DIVIDE([Variación Absoluta],[Total Venta LY],0)

-- Variación Absoluta
Variación Absoluta = [Total Venta Neta] - [Total Venta LY]

-- % Ratio Devoluciones
% Ratio Devoluciones = DIVIDE([Cantidad Devoluciones],[Unidades Vendidas],BLANK())

-- Cantidad Devoluciones
Cantidad Devoluciones = 
VAR Devo = 
    CALCULATE(
              SUM(Fact_ventas[Cantidad]),
              Fact_ventas[Clasificación Comprobante] = "Devoluciones",
              USERELATIONSHIP(Fact_ventas[Producto_Key], Dim_producto[Producto_Key])
             )
RETURN
COALESCE(Devo,0)

-- Filas con Importe Negativo
Filas con Importe Negativo = 
CALCULATE(
          COUNTROWS( Fact_ventas ),
          FILTER( Fact_ventas, Fact_ventas[ImportePesos] <= 0 )
          )

-- Filas sin Cliente
Filas sin Cliente = 
CALCULATE(
          COUNTROWS(Fact_ventas),
          FILTER(Fact_ventas, 
                 ISBLANK( Fact_ventas[Cliente_Key])
                 )
         )

-- Filas totales
Filas totales = COUNTROWS(Fact_ventas)

-- Total Egresos por Ventas
Total Egresos por Ventas = 
VAR _Moneda = 
    SELECTEDVALUE(Dim_moneda[Moneda],"Peso") 
RETURN
SWITCH( _Moneda,
        "Peso",ABS([ImportePesos_Egresos]),
        "Dolar",ABS([ImporteDolares_Egresos]),
        0
        )

-- Unidades Vendidas
Unidades Vendidas = 
VAR Unidades_ = 
    CALCULATE(
              SUM(Fact_ventas[Cantidad]),
              Fact_ventas[Clasificación Comprobante] = "Ingresos por Ventas"
              )
RETURN
IF (
    ISBLANK(Unidades_),
    0,
    CALCULATE(Unidades_,VALUES(Dim_producto[Tipo_Producto]))
    )

-- Unidades Vendidas Prod
Unidades Vendidas Prod = CALCULATE(
                                   [Unidades Vendidas],
                                   USERELATIONSHIP(Fact_ventas[Producto_Key], Dim_producto[Producto_Key])
                                   )

-- Comprobantes Totales
Comprobantes Totales = 
VAR Comprobante_ = 
CALCULATE(
          COUNT(Dim_comprobante[Comprobante_Key]),
          CROSSFILTER(Dim_comprobante[Comprobante_Key],Fact_ventas[comprobante_key],Both)
          )
RETURN
COALESCE(Comprobante_,0)

-- Titulo Venta por provincia
Titulo Venta por provincia = "VENTAS POR CIUDAD EN " & 
                            SELECTEDVALUE(Dim_geografica[Provincia]) &
                            " ("&[Clientes Totales]&" "&
                            IF([Clientes Totales]>1,"clientes)","cliente)")

-- % Participación Producto
% Participación Producto = DIVIDE([Total Venta Producto],
                                  CALCULATE([Total Venta Producto],ALL(Dim_producto)),
                                  0)

-- Dias Transcurridos UV Producto
Dias Transcurridos UV Producto = CALCULATE([Dias Transcurridos UV],
                                           USERELATIONSHIP(Dim_producto[Producto_Key],Fact_ventas[Producto_Key])
                                           )

-- Diferencia de posiciones ranking producto
Diferencia de posiciones ranking producto = [Ranking Productos LY]- [Ranking Productos]

-- Participacion_Producto
Participacion_Producto = DIVIDE([Total Venta Producto],
                                CALCULATE([Total Venta Producto],ALL(Dim_producto)),
                                0)

-- Promedio Venta Producto
Promedio Venta Producto = 
-- Promedio de venta para todos los productos que tengan al menos una venta
VAR ProductosConVenta =
    FILTER(
        VALUES(Dim_producto[Producto]),
        CALCULATE([Total Venta Producto]) > 0
    )
RETURN
IF(
    COUNTROWS(ProductosConVenta) = 0,
    BLANK(),
    AVERAGEX(ProductosConVenta, CALCULATE([Total Venta Producto]))
)

-- Ranking Productos
Ranking Productos = IF(
                        ISBLANK([Total Venta Producto]),
                        BLANK(),
                        RANKX(ALLSELECTED(Dim_producto[Tipo_Producto]),[Total Venta Producto],,DESC,Dense)
                        )

-- Ranking Productos LY
Ranking Productos LY = IF(
                          ISBLANK([Total Venta Producto]),
                          BLANK(),
                          RANKX(ALLSELECTED(Dim_producto[Tipo_Producto]),[Total Venta Producto LY],,DESC,Dense)
                          )

-- Total Venta Producto
Total Venta Producto = CALCULATE(
                                 [Total Venta Neta],
                                 USERELATIONSHIP(Fact_ventas[Producto_Key],Dim_producto[Producto_Key])
                                 )

-- Total Venta Producto AC
Total Venta Producto AC = CALCULATE(
                                    [Total Venta AC],
                                    USERELATIONSHIP(Fact_ventas[Producto_Key],
                                    Dim_producto[Producto_Key])
                                    )

-- Total Venta Producto LY
Total Venta Producto LY = CALCULATE(
                                    [Total Venta LY],
                                    USERELATIONSHIP(Fact_ventas[Producto_Key],
                                    Dim_producto[Producto_Key])
                                    )
